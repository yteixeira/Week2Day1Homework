This exercise requires you to know the following aspects of SQL:
CREATE TABLE Concatenation
SQL Data Types Formatting dates and numbers
INSERT INTO Column aliases
SELECT Simple JOIN statements
WHERE clause Complex JOIN statements
LIKE and wildcards Subquery
Exercise 1 â€“ Northwind Queries (40 marks: 5 for each question)
1.1	Write a query that lists all Customers in either Paris or London. Include Customer ID, Company Name and all address fields.

SELECT CustomerID, CompanyName, [Address], City, Region, PostalCode, Country  FROM Customers WHERE City = 'London' OR City = 'Paris'

1.2	List all products stored in bottles.

SELECT * FROM Products WHERE QuantityPerUnit Like '%bottle%'

1.3	Repeat question above, but add in the Supplier Name and Country.

SELECT Products.*, Suppliers.CompanyName, Suppliers.Country FROM Products
INNER JOIN Suppliers ON Products.SupplierID = Suppliers.SupplierID
WHERE QuantityPerUnit Like '%bottle%'

1.4	Write an SQL Statement that shows how many products there are in each category. Include Category Name in result set and list the highest number first.

SELECT COUNT(ProductID) AS 'Number_of_Products', Categories.CategoryName FROM Products
INNER JOIN Categories ON Products.CategoryID = Categories.CategoryID
GROUP BY Categories.CategoryName ORDER BY Number_of_Products DESC

1.5	List all UK employees using concatenation to join their title of courtesy, first name and last name together. Also include their city of residence.

SELECT CONCAT(TitleOfCourtesy, ' ', FirstName, ' ',LastName) AS Employee, City FROM Employees

1.6	List Sales Totals for all Sales Regions (via the Territories table using 4 joins) with a Sales Total greater than 1,000,000. Use rounding or FORMAT to present the numbers.

SELECT ROUND(SUM([ORDER DETAILS].UnitPrice * [ORDER DETAILS].Quantity),2) AS Total, 
Region.RegionDescription FROM Orders
INNER JOIN [Order Details] ON Orders.OrderID = [Order Details].OrderID
INNER JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID
INNER JOIN EmployeeTerritories ON Employees.EmployeeID = EmployeeTerritories.EmployeeID
INNER JOIN Territories ON EmployeeTerritories.TerritoryID = Territories.TerritoryID
INNER JOIN Region ON Territories.RegionID = Region.RegionID
GROUP BY Region.RegionDescription HAVING SUM([ORDER DETAILS].UnitPrice * [ORDER DETAILS].Quantity) > 1000000



1.7 Count how many Orders have a Freight amount greater than 100.00 and either USA or UK as Ship Country.

SELECT COUNT(OrderID) FROM Orders
WHERE Freight > 100.00 AND (ShipCountry = 'USA' OR ShipCountry = 'UK')

1.8 Write an SQL Statement to identify the Order Number of the Order with the highest amount of discount applied to that order.

SELECT top 1 [Order Details].OrderID, SUM(UnitPrice*Quantity) AS TotalPrice, ROUND(SUM((UnitPrice*Quantity)*Discount),2) AS Deducted 
FROM [Order Details] 
GROUP BY OrderID ORDER BY Deducted DESC;

Additional homework
Write an SQL statement to create a database, create a minimum of 2 tables
Each of the database tables should be related. There should be a primary key and a foreign key.
NOTE: The choice of database and the choice of tables should reflect an area of your interest

CREATE DATABASE BoardGamesDB;

CREATE TABLE Authors (AuthorID int, AuthorName varchar (255)
PRIMARY KEY (AuthorID))

CREATE TABLE BoardGames (GameID int, GameName varchar(255), AuthorID 
PRIMARY KEY (GameID), FOREIGN KEY (AuthorID) REFERENCES Authors(AuthorID))
 

